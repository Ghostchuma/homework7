# 1. Наведено список рядків my_list. Створити новий список до якого помістити елементи з my_list за таким правилом:
# Якщо рядок стоїть на непарному місці my_list, то його замінити на перевернутий рядок. "qwe" на "ewq".
# Якщо на парному – залишити без зміни. Завдання зробити за допомогою enumerate або range.

my_list = ["proga", "class", "ogo", "hard"]
new_list = []

for index, string in enumerate(my_list):
    if index % 2 == 0:
        new_list.append(string)
    else:
        new_list.append(string[::-1])

print(new_list)
# 2. Наведено список рядків my_list. Створити новий список до якого помістити елементи my_list
# у яких перший символ - буква "a".
my_list = ["aloha", "bebra", "hello", "ambulance"]

new_list = []

for string in my_list:
    if string.startswith("a"):
        new_list.append(string)

print(new_list)
# 3. Наведено список рядків my_list. Створити новий список до якого помістити
# елементи з my_list, у яких є символ - буква "a" на будь-якому місці.
my_list = ["aloha", "ahaha", "count", "Mykola"]

new_list = []

for string in my_list:
    if "a" in string:
        new_list.append(string)

print(new_list)
# 4) Даний список словників людей у форматі [{"name": "John", "age": 15}, ..., {"name": "Jack", "age": 45}]
# а) Створити список і помістити туди ім'я наймолодшої людини. Якщо вік збігається – помістити всі імена наймолодших.
# б) Створити список та помістити туди найдовше ім'я. Якщо довжина імені збігається - помістити такі імена.
# в) Порахувати середню вік усіх людей із початкового списку.
# persons
people = [{"name": "John", "age": 15}, {"name": "Countman", "age": 20}, {"name": "Jack", "age": 45}]
min_age = min(people, key=lambda person: person["age"])["age"]
youngest_names = [person["name"] for person in people if person["age"] == min_age]

print(youngest_names)
#5) Дано два словники my_dict_1 і my_dict_2.
# а) Створити список із ключів, які є в обох словниках.
# б) Створити список із ключів, які є у першому, але немає у другому словнику.
# в) Створити новий словник з пар {ключ:значення} для ключів, які є в першому, але немає в другому словнику.
# г) Об'єднати ці два словники у новий словник за правилом:
# якщо ключ є тільки в одному з двох словників - помістити пару ключ: значення,
# якщо ключ є у двох словниках - помістити пару {ключ: [значення_з_першого_словника, значення_з_другого_словника]},
# {1:1, 2:2}, {11:11, 2:22} ---> {1:1, 11:11, 2:[2, 22]}

#a))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
my_dict_1 = {"b": 1, "e": 2, "b": 3}
my_dict_2 = {"b": 4, "e": 5, "r": 6}

common_keys = list(set(my_dict_1.keys()) & set(my_dict_2.keys()))

print(common_keys)
#Б))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
my_dict_1 = {"b": 1, "e": 2, "b": 3}
my_dict_2 = {"e": 4, "a": 5, "r": 6}

unique_keys = list(set(my_dict_1.keys()) - set(my_dict_2.keys()))

print(unique_keys)
#B)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
my_dict_1 = {"h": 1, "e": 2, "b": 3}
my_dict_2 = {"e": 4, "b": 5, "r": 6}

new_dict = {key: value for key, value in my_dict_1.items() if key not in my_dict_2}

print(new_dict)

#Г))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
my_dict_1 = {1: 1, 2: 2}
my_dict_2 = {11: 11, 2: 22}

merged_dict = {}

for key in set(my_dict_1.keys()) | set(my_dict_2.keys()):
    if key in my_dict_1 and key in my_dict_2:
        merged_dict[key] = [my_dict_1[key], my_dict_2[key]]
    elif key in my_dict_1:
        merged_dict[key] = my_dict_1[key]
    else:
        merged_dict[key] = my_dict_2[key]
print(merged_dict)
